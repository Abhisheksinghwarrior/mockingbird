/*!
 * mockingbird mixins.css 12/2016
 */

@mixin clearfix() {
	&::before,
  &::after {
    content: '';
    display: table;
  }
  &::after {
    clear: both;
  }
}

@mixin button-variant($color, $bg, $invert: "") {
	background-color: $bg !important;
	color: $color !important;
	border-color: darken($bg,10%) !important;
	&:hover,
	&:focus,
	&:active,
	&.active {
		background-color: darken($bg,5%) !important;
		color: $color !important;
		border-color: darken($bg,15%) !important;
		&.btn-invert {
			background-color: $bg !important;
			color: $color !important;
			border-color: darken($bg,10%) !important;
		}
	}
	&:focus {
		border-color: darken($bg,25%) !important;
	}
	&.btn-invert {
		background-color: $white !important;
		color: $bg !important;
		color: unquote($invert) !important;
	}
}

@mixin fieldset-variant($color) {
	background-color: rgba($color,.075);
	border-color: $color;
	legend {
		color: $color;
	}
}

@mixin make-columns($columns: $grid-columns, $breakpoints: $grid-breakpoints) {

	%column {
		position: relative;
		float: left;
		min-height: 1px;
		padding: 0 ($grid-gutter / 2);
	}

	@each $breakpoint in map-keys($breakpoints) {
		@for $i from 1 through $columns {
			.col-#{$breakpoint}-#{$i} {

				@extend %column;
				width: percentage($i / $columns);

				&:first-child {
					padding-left: 0;
				}

				&:last-child {
					padding-right: 0;
				}

				@media (max-width: map-get($breakpoints, #{$breakpoint})) {
					width: 100%;
					padding: ($grid-gutter / 2) 0;
				}

			}
		}
	}

}

@mixin vertical-center {
	position: relative;
	top: 50%;
	transform: translateY(-50%);
}

@mixin flex-center {
	display: flex;
	justify-content: center;
}
